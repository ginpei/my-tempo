rules_version = '2';
service firebase.storage {
  match /b/{bucket}/o {
    match /users/{userId} {
      // match /{allPaths=**} {
      // }

      match /photo {
        allow read: if true;
        allow write: if isAuthUid(userId) && isImageMb(5);
        allow delete: if isAuthUid(userId);
      }
    }

    match /posts/{postId}/{imageId} {
        allow read: if isPublic(resource);
        allow write: if isPublic(request.resource);
        // allow update: if isAuthUid(resource.metadata.userId) && isLtMb(5) && isImage();
    }

    function isAuthUid(uid) {
      return request.auth.uid == uid;
    }

    function isPublic(res) {
      return res.metadata['visibility'] == 'public';
    }

    function isImageMb(mb) {
      return isImage() && isLtMb(mb);
    }

    // is the request file size less than in MB
    function isLtMb(mb) {
      return request.resource.size < mb * 1024 * 1024;
    }

    function isImage() {
      return request.resource.contentType.matches('image/.*');
    }
  }
}
